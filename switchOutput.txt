Call:   start
RESERVED_WORD token: package
  Consumed token: <"package" at line 1 column 1>
IDENTIFIER token: main
  Consumed token: <<IDENTIFIER>: "main" at line 1 column 9>
  Call:   statementList
IDENTIFIER token: i
    Call:   statement
RESERVED_WORD token: int
      Call:   declarationStatement
        Call:   variableDeclaration
          Call:   identifier
            Consumed token: <<IDENTIFIER>: "i" at line 2 column 1>
          Return: identifier
          Call:   type
            Consumed token: <"int" at line 2 column 3>
          Return: type
        Return: variableDeclaration
        Consumed token: <";" at line 2 column 6>
      Return: declarationStatement
    Return: statement
IDENTIFIER token: i
    Call:   statement
EQUALS token: =
      Call:   assignmentStatement
        Call:   identifier
          Consumed token: <<IDENTIFIER>: "i" at line 3 column 1>
        Return: identifier
        Consumed token: <"=" at line 3 column 3>
        Call:   expression
          Call:   term
            Call:   operand
INTEGER_NUMBER token: 5
              Call:   integerConstant
                Consumed token: <<INTEGER_NUMBER>: "5" at line 3 column 5>
              Return: integerConstant
            Return: operand
          Return: term
        Return: expression
      Return: assignmentStatement
      Consumed token: <";" at line 3 column 6>
    Return: statement
RESERVED_WORD token: switch
    Call:   statement
      Call:   switchStatement
        Consumed token: <"switch" at line 5 column 1>
IDENTIFIER token: i
        Call:   expression
          Call:   term
            Call:   operand
              Call:   identifier
                Consumed token: <<IDENTIFIER>: "i" at line 5 column 8>
              Return: identifier
            Return: operand
OPEN_BRACE token: {
          Return: term
        Return: expression
        Call:   switchBlock
          Consumed token: <"{" at line 5 column 10>
          Call:   caseGroup
RESERVED_WORD token: case
            Consumed token: <"case" at line 6 column 1>
            Call:   expressionList
              Call:   expression
                Call:   term
                  Call:   operand
INTEGER_NUMBER token: 4
                    Call:   integerConstant
                      Consumed token: <<INTEGER_NUMBER>: "4" at line 6 column 6>
                    Return: integerConstant
                  Return: operand
                Return: term
              Return: expression
            Return: expressionList
            Consumed token: <":" at line 6 column 7>
            Call:   statementList
              Call:   statement
                Call:   printStatement
                  Consumed token: <"Println" at line 7 column 5>
OPEN_PAREN token: (
                  Consumed token: <"(" at line 7 column 12>
                  Call:   expression
                    Call:   term
                      Call:   operand
INTERPRETED_STRING token: "noo!"
                        Call:   interpretedString
                          Consumed token: <<INTERPRETED_STRING>: ""noo!"" at line 7 column 13>
                        Return: interpretedString
                      Return: operand
CLOSE_PAREN token: )
                    Return: term
                  Return: expression
                  Consumed token: <")" at line 7 column 19>
                Return: printStatement
                Consumed token: <";" at line 7 column 20>
              Return: statement
RESERVED_WORD token: case
            Return: statementList
            Consumed token: <"case" at line 8 column 1>
            Call:   expressionList
              Call:   expression
                Call:   term
                  Call:   operand
INTEGER_NUMBER token: 5
                    Call:   integerConstant
                      Consumed token: <<INTEGER_NUMBER>: "5" at line 8 column 6>
                    Return: integerConstant
                  Return: operand
                Return: term
              Return: expression
            Return: expressionList
            Consumed token: <":" at line 8 column 7>
            Call:   statementList
              Call:   statement
                Call:   printStatement
                  Consumed token: <"Println" at line 9 column 5>
OPEN_PAREN token: (
                  Consumed token: <"(" at line 9 column 12>
                  Call:   expression
                    Call:   term
                      Call:   operand
INTERPRETED_STRING token: "yes!"
                        Call:   interpretedString
                          Consumed token: <<INTERPRETED_STRING>: ""yes!"" at line 9 column 13>
                        Return: interpretedString
                      Return: operand
CLOSE_PAREN token: )
                    Return: term
                  Return: expression
                  Consumed token: <")" at line 9 column 19>
                Return: printStatement
                Consumed token: <";" at line 9 column 20>
              Return: statement
RESERVED_WORD token: default
            Return: statementList
            Call:   defaultCase
              Consumed token: <"default" at line 10 column 1>
              Consumed token: <":" at line 10 column 8>
              Call:   statementList
                Call:   statement
                  Call:   printStatement
                    Consumed token: <"Println" at line 11 column 5>
OPEN_PAREN token: (
                    Consumed token: <"(" at line 11 column 12>
                    Call:   expression
                      Call:   term
                        Call:   operand
INTERPRETED_STRING token: "error"
                          Call:   interpretedString
                            Consumed token: <<INTERPRETED_STRING>: ""error"" at line 11 column 13>
                          Return: interpretedString
                        Return: operand
CLOSE_PAREN token: )
                      Return: term
                    Return: expression
                    Consumed token: <")" at line 11 column 20>
                  Return: printStatement
                  Consumed token: <";" at line 11 column 21>
                Return: statement
CLOSE_BRACE token: }
              Return: statementList
            Return: defaultCase
          Return: caseGroup
          Consumed token: <"}" at line 12 column 1>
        Return: switchBlock
      Return: switchStatement
    Return: statement
  Return: statementList
  Consumed token: <<EOF> at line 12 column 2>
Return: start

===== CROSS-REFERENCE TABLE =====

*** PACKAGE main ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
i                002 003 005
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = int

===== INTERMEDIATE CODE =====

*** PACKAGE main ***

<statementList>
    <variableDeclaration>
        <identifier id="i" level="1" index="0" type_id="int" />
    </variableDeclaration>
    <assignmentStatement type_id="int">
        <identifier id="i" level="1" index="0" type_id="int" />
        <integerConstant value="5" type_id="int" />
    </assignmentStatement>
    <switchStatement>
        <identifier id="i" level="1" index="0" type_id="int" />
        <switchBlock>
            <caseGroup>
                <expressionList>
                    <integerConstant value="4" type_id="int" />
                </expressionList>
                <statementList>
                    <printStatement type_id="string">
                        <interpretedString value=""noo!"" type_id="string" />
                    </printStatement>
                </statementList>
                <expressionList>
                    <integerConstant value="5" type_id="int" />
                </expressionList>
                <statementList>
                    <printStatement type_id="string">
                        <interpretedString value=""yes!"" type_id="string" />
                    </printStatement>
                </statementList>
                <statementList>
                    <printStatement type_id="string">
                        <interpretedString value=""error"" type_id="string" />
                    </printStatement>
                </statementList>
            </caseGroup>
        </switchBlock>
    </switchStatement>
</statementList>

Process finished with exit code 0
